{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "Config.json",
  "title": "Config",
  "description": "Connector configuration schema.",
  "type": "object",
  "properties": {
    "env": {
      "description": "Determines what type of network the connector is a part of. Can be: 'production', 'test'. Default: 'test'",
      "type": "string",
      "enum": ["production", "test"],
      "default": "test"
    },
    "profile": {
      "description": "Determines the configuration defaults to use when running the connector. Can be: 'connector', 'server', 'plugin', 'cluster'. Default: 'connector'",
      "type": "string",
      "enum": ["connector", "server", "plugin", "cluster"],
      "default": "connector"
    },
    "ilpAddress": {
      "description": "ILP address of the connector. This property can be omitted if an account with `relation=parent` is configured under `accounts`.",
      "type": "string",
      "pattern": "^[a-zA-Z0-9._~-]+$",
      "default": "unknown"
    },
    "ilpAddressInheritFrom": {
      "description": "If there are multiple parents, and `ilpAddress` is not set explicit, specify the account ID of the parent that we should load our address from. Defaults to the first parent in the `accounts` map.",
      "type": "string",
      "default": ""
    },
    "accountProviders": {
      "description": "Account providers that should be loaded at startup.",
      "type": "object",
      "additionalProperties": { "$ref" : "AccountProviderConfig.json"},
      "default": {
        "connector": { "default": { "type" : "plugin" }},
        "server": { "default": { "type" : "plugin" }},
        "plugin": { "default": { "type" : "plugin" }},
        "cluster": { "default": { "type" : "plugin" }}
      }
    },
    "accounts": {
      "description": "Description of connector account plugins.",
      "type": "object",
      "default": {},
      "additionalProperties": { "$ref": "AccountConfig.json" }
    },
    "defaultRoute": {
      "description": "Which account should be used as the default route for all other traffic. Can be set to empty string to disable the default route or 'auto' to automatically use the first parent in the `accounts` map. Default: 'auto'",
      "type": "string",
      "default": "auto"
    },
    "routes": {
      "description": "Additional routes to add to the connector's routing table.",
      "type": "array",
      "default": [],
      "items": {
        "description": "Description of a route entry.",
        "type": "object",
        "properties": {
          "targetPrefix": {
            "description": "ILP address prefix that this route applies to. Configured routes take precedence over the same or shorter prefixes that are local or published by peers. More specific prefixes will still take precedence. Prefixes should NOT include a trailing period.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9._~-]+$"
          },
          "peerId": {
            "description": "ID of the account that destinations matching `targetPrefix` should be forwarded to. Must be one of the accounts in `accounts`.",
            "type": "string",
            "pattern": "^[a-zA-Z0-9._~-]+$"
          }
        },
        "required": ["targetPrefix", "peerId"],
        "additionalProperties": false
      }
    },
    "spread": {
      "description": "How much of a spread to add on top of the reference exchange rate. Determines the connector's margin.",
      "type": "number",
      "default": 0.002
    },
    "minMessageWindow": {
      "description": "Minimum time the connector wants to budget for getting a message to the accounts its trading on. In milliseconds.",
      "type": "integer",
      "default": 1000
    },
    "maxHoldTime": {
      "description": "Maximum duration (in milliseconds) the connector is willing to place funds on hold while waiting for the outcome of a transaction.",
      "type": "integer",
      "default": 30000
    },
    "routeBroadcastEnabled": {
      "description": "Whether to broadcast known routes.",
      "type": "boolean",
      "default": {
        "connector": true,
        "server": true,
        "plugin": false,
        "cluster": true
      }
    },
    "routeBroadcastInterval": {
      "description": "Frequency at which the connector broadcasts its routes to adjacent connectors. (in milliseconds)",
      "type": "integer",
      "default": 30000
    },
    "routeCleanupInterval": {
      "description": "The frequency at which the connector checks for expired routes. (in milliseconds)",
      "type": "integer",
      "default": 1000
    },
    "routeExpiry": {
      "description": "The maximum age of a route provided by this connector. (in milliseconds)",
      "type": "integer",
      "default": 45000
    },
    "routingSecret": {
      "description": "Seed used for generating routing table auth values.",
      "type": "string",
      "default": ""
    },
    "backend": {
      "description": "Name of the backend (can be built-in or a require-able module name). Built-in modules are: ecb, ecb-plus-xrp, ecb-plus-coinmarketcap, one-to-one",
      "type": "string",
      "default": "ecb"
    },
    "backendConfig": {
      "description": "Additional configuration for the backend.",
      "type": "object",
      "default": {},
      "additionalProperties": true
    },
    "store": {
      "description": "Name of the store (can be built-in or a require-able module name). Built-in modules are: leveldown, memdown",
      "type": "string",
      "default": "leveldown"
    },
    "storePath": {
      "description": "Shorthand for `config.storeConfig.path`.",
      "type": "string",
      "default": ""
    },
    "storeConfig": {
      "description": "Additional options to be passed to the `store`'s constructor.",
      "type": "object",
      "default": {},
      "additionalProperties": true
    },
    "middlewares": {
      "description": "Additional middleware that should be added to the middleware stack.",
      "type": "object",
      "additionalProperties": { "$ref" : "ModuleConfig.json" },
      "default": {}
    },
    "disableMiddleware": {
      "description": "List of built-in middlewares that should be disabled. Can be used to replace built-in middleware with your own custom version.",
      "type": "array",
      "items": {
        "description": "Name of the middleware to be removed.",
        "enum": ["errorHandler", "rateLimit", "balance", "maxPacketAmount", "throughput", "deduplicate", "validateFulfillment", "expire", "stats", "alert"]
      },
      "default": {
        "connector": [],
        "plugin": ["deduplicate", "expire", "validate-fulfillment", "max-packet-amount"],
        "cluster": ["balance", "throughput", "rate-limit"]
      }
    },
    "reflectPayments": {
      "description": "Whether to allow routing payments back to the account that sent them.",
      "type": "boolean",
      "default": true
    },
    "initialConnectTimeout": {
      "description": "How long the connector should wait for account plugins to connect before launching other subsystems. (in milliseconds)",
      "type": "integer",
      "default": 10000
    },
    "adminApi": {
      "description": "Whether the admin API is enabled or not. Default: false (disabled)",
      "type": "boolean",
      "default": false
    },
    "adminApiPort": {
      "description": "Which port the admin API should listen on. Default: 7780",
      "type": "integer",
      "minimum": 0,
      "maximum": 65535,
      "default": 7780
    },
    "adminApiHost": {
      "description": "Host to bind to. Warning: The admin API interface should never be made public! Default: '127.0.0.1'",
      "type": "string",
      "default": "127.0.0.1"
    },
    "collectDefaultMetrics": {
      "description": "Whether the Prometheus exporter should include system metrics or not. Default: false (no)",
      "type": "boolean",
      "default": false
    }
  },
  "required": ["accounts"],
  "additionalProperties": false
}
